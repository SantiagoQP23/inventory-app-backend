// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STAFF
}

model User {
  id            String          @id
  name          String
  lastname      String
  email         String          @unique
  password      String
  userStores    UserStore[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  StockMovement StockMovement[]
}

model Store {
  id         String      @id
  name       String
  userStores UserStore[]
  products   Product[]
  categories Category[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model UserStore {
  id      String @id
  userId  String
  storeId String
  role    Role

  user  User  @relation(fields: [userId], references: [id])
  store Store @relation(fields: [storeId], references: [id])

  @@unique([userId, storeId]) // one role per user per store
}

model Category {
  id        String    @id
  name      String
  storeId   String
  store     Store     @relation(fields: [storeId], references: [id])
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([name, storeId])
}

model Product {
  id             String          @id
  name           String
  description    String?
  price          Decimal         @db.Decimal(10, 2)
  quantity       Int             @default(0)
  storeId        String
  categoryId     String?
  store          Store           @relation(fields: [storeId], references: [id])
  category       Category?       @relation(fields: [categoryId], references: [id])
  stockMovements StockMovement[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@unique([name, storeId])
}

model StockMovement {
  id        String       @id
  productId String
  type      MovementType
  quantity  Int
  reason    String?
  product   Product      @relation(fields: [productId], references: [id])
  userId    String
  user      User         @relation(fields: [userId], references: [id])
  createdAt DateTime     @default(now())
}

enum MovementType {
  IN
  OUT
}
